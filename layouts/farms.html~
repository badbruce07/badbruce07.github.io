<!DOCTYPE html>
<html lang="en" class="no-js">

	<head>
	
		<!-- title and meta -->
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width,initial-scale=1.0" />
		<meta name="description" content="A neat and simple tabbed content area with CSS and jQuery" />
		<title> Going Through With Farms </title>
		
		<link rel="stylesheet" href="../css/new_harvest.css" type="text/css" />
	</head>
	
	<body>
		<div id="wrapper">
			
			<header>	
				<div id="title" class="container">
        			<h1> Navigating Through Farms Using HarvestAPI  </h1>
    			</div>
			</header>
			
			<div id="main">
				
				<h1 id="intro"> Going Through Farms Endpoint </h1>
				
				<h3> You can check out the crops endpoint at: <br />
						<a href="http://harvestdata.herokuapp.com/farms/"> HarvestAPI Farms </a>
				</h3> <br /> <br />				
				
				<h1 id="intro"> Accessing The Farm Data Through a PHP Snippet </h1>
				<h3> Now you can access the data with any platform of your choice, but for me I will be using PHP especially since
					  from the previous page I created a connection to HarvestAPI utilizing both PHP and cURL called CallHarvestAPI.php. 
					  You can see a view of the snippet below: 
				</h3>
				
				<textarea readonly="readonly" rows="40" cols="100">

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<link rel="stylesheet" href="style.css"/>	
	</head>
	<body>
	
	<?php
		include("CallHarvestAPI.php");

		/*---------------------------------------------------------------------------------------*/
		/*---------------------------------- Farm Details ---------------------------------------*/
		/*---------------------------------------------------------------------------------------*/
		
		$parish = $_GET['parish'];
		
		// call farms resource to return string
		$farms = CallAPI('GET', 'harvestdata.herokuapp.com/farms/', array('search'=> $parish, 'ordering'=> 'extension'));

		//convert JSON string to PHP variable (object)
		$farm_objects = json_decode($farms);

		$num_farms = $farm_objects -> count;
		$next_page_farm_url = $farm_objects -> next;

		//getting the actual prices from results
		$farms_dem = $farm_objects -> results;
		?>
		
		<form action="farms.php" method="get">
			<fieldset>
				<legend> Search By Parish: </legend>	
				Parish Name: <input type="text" name = "parish"/> <input type="submit"/>		
			</fieldset>
		
			<br />
			<br />
			
			<table>
				<tr>
					<td> Farm Address </td>
					<td> Farm ID </td>	
					<td> Parish </td>
					<td> District </td>
					<td> Extension </td>
				</tr>
				
			<?php
			foreach($farms_dem as $farm)
			{
				echo '<tr>
					<td>'.$farm -> farm_address.'</td>
					<td>'.$farm -> farm_id. '</td>
					<td>'.$farm -> parish. '</td>
					<td>'.$farm -> district. '</td>
					<td>'.$farm -> extension. '</td>
				</tr>';		
			
			}
			?>
			
			</table>
		</form>
		
	</body>
</html>
				
				</textarea>
				
				<h3>
					From the above snippet called <b id="term1"> Farms.php </b>, in line 9, we used an include function which calls 
					back the <b id="term1"> CallHarvestAPI.php </b> snippet. n line 15 we created a variable name 
					called <b id="term1"> $parish </b> which defines <b id="term1">$_GET['parish']</b>. The variable 
					'parish' is in fact a field in farms endpoint and is seen again in line 35 in our form. The aim is to 
					search for a parish to display a list with the fields in the table.
					
				</h3>
				
				<ul id="test1">
					<li> In lines 18-19 a variable called $crops and it is equivalent to CallAPI function that has 3 parameters. 
						  If you recall the CallAPI function that was in CallHarvestAPI.php the parameters include:
						  
						<ul>
							<li> $method = 'GET' </li>
							<li> $url = 'harvestdata.herokuapp.com/farms/'</li>
							<li> $data = array('search'=>$parish, 'ordering'=>'-extension') </li>
						</ul>
						NB. For the $data variable, you can use any variable name such as parish, farm_address, farm_id, extension and farm_size. <br />
						Farms endpoint consists of field names such as {
							"farm_address", 
            			"farm_id", 
            			"parish", 
            			"district", 
            			"extension", 
            			"farm_size", 
            			"lat", 
            			"long", 
            			"farmer"            
            			}. Also, the ordering is done by extension in descending order.	
            	</li> <br />
            	
            	<li>
						In line 22, json_decode is used to decode a JSON string and then it becomes a PHP variable 
						<b id="term1">$farm_objects. </b>
				  	
				  	</li>		
				  	
				  	<li>
						In line 24, $num_farms keeps a count of the number of crops.				  	
				  	</li>		
				  	<li>
						In line 28, $farms_dem gets the farms from results.				  	
				  	</li>
				  	
				  	<li>
						In lines 32-36, a form was created and a navigation was done by Parish. Of course the name must match 
						'parish', which is the value we are trying to get to print the rest of details of our choice. 
						<br/>
						Tables are created so that the results can be seen there and we have a foreach() loop to 
						print the fields of our choice.<br />
						Look at the table below: <br/>
						<img src="../img/screenshot_farms.png" alt=""/>		<br /> <br />
						As shown above the foreach() loop in line 51 takes care of each row that has details regarding the 
						parish name (take a look at the URL locator and you will see 'parish'='Trelawny')
					</li>
				</ul>
				
			</div>
			
			<footer>
				<table> 
					<tr> 
						<td> <a href="util_php.html"> Previous </a></td> 
    					<td> <a href="../index.html"> Back to Main </a> </td>
    				</tr>
    			</table>
    		
			</footer><!-- /footer -->
		
		</div>
	</body>
	
	
	
</html>