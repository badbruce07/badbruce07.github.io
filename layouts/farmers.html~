<!DOCTYPE html>
<html lang="en" class="no-js">

	<head>
	
		<!-- title and meta -->
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width,initial-scale=1.0" />
		<meta name="description" content="A neat and simple tabbed content area with CSS and jQuery" />
		<title> Going Through With Farmers </title>
		
		<link rel="stylesheet" href="../css/new_harvest.css" type="text/css" />
	</head>
	
	<body>
		<div id="wrapper">
			
			<header>	
				<div id="title" class="container">
        			<h1> Navigating Through Farmers Using HarvestAPI  </h1>
    			</div>
			</header>
			
			<div id="main">
				
				<h1 id="intro"> Going Through Farmers Endpoint </h1>
				
				<h3> You can check out the crops endpoint at: <br />
						<a href="http://harvestdata.herokuapp.com/farmers/"> HarvestAPI Farms </a>
				</h3> <br /> <br />				
			
				<h1 id="intro"> Accessing The Farmer Data Through a PHP Snippet </h1>
				<h3> Now you can access the data with any platform of your choice, but for me I will be using PHP especially since
					  from the previous page I created a connection to HarvestAPI utilizing both PHP and cURL called CallHarvestAPI.php. 
					  You can see a view of the snippet below: 
				</h3>
				
				<textarea readonly="readonly" rows="40" cols="100">
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<link rel="stylesheet" href="style.css"/>	
	</head>
	<body>
	
	<?php
		include("CallHarvestAPI.php");
		
		/*---------------------------------------------------------------------------------------*/
		/*---------------------------------- Farmer Details -------------------------------------*/
		/*---------------------------------------------------------------------------------------*/
		$first_name = $_GET['first_name'];

		//call farmers resource to return string
		$farmers = CallAPI('GET', 'harvestdata.herokuapp.com/farmers/', 
								array('search'=>$first_name, 'ordering'=>'last_name'));
		
		//convert JSON string to PHP variable (object)
		$farmer_objects = json_decode($farmers);

		$num_farmers = $farmer_objects->count;
		$next_page_url  = $farmer_objects->next;
		
		//now get the actual farmers from results
		$fama_dem = $farmer_objects->results;
		
	?>
		
		<form action="farmers.php" method="get">
			<fieldset>
				<legend> Search By Farmer First Name: </legend>	
				Farmer First Name: <input type="text" name = "first_name"/> <input type="submit"/>		
			</fieldset>
		</form>
		<br />
		<br />	
		<table>
			<tr>
				<td> Farmer ID </td>	
				<td> First Name </td>
				<td> Last Name </td>
				<td> Parish </td>
				<td> Verified Status </td>			
			</tr>			
			
			<?php
				
			foreach ($fama_dem as $fama) {
				echo '<tr>
					<td>'.$fama -> farmer_id.'</td>
					<td>'.$fama -> first_name. '</td>
					<td>'.$fama -> last_name. '</td>
					<td>'.$fama -> res_parish. '</td>
					<td>'.$fama -> verified_status. '</td>
				</tr>';
			}
				
			?>
		</table>	
	</body>				
</html>		
			</textarea>
			
			<h3>
				From the above snippet called <b id="term1"> Farmers.php </b>, in line 9, we used an include function which calls 
				back the <b id="term1"> CallHarvestAPI.php </b> snippet. In line 15 we created a variable name 
				called <b id="term1"> $first_name </b> which defines <b id="term1">$_GET['first_name']</b>. The variable 
				'first_name' is in fact a field in farms endpoint and is seen again in line 35 in our form. The aim is to 
				search for a parish to display a list with the fields in the table. 					
			</h3>
			
			<ul id="test1">
					<li> In lines 18-19 a variable called $crops and it is equivalent to CallAPI function that has 3 parameters. 
						  If you recall the CallAPI function that was in CallHarvestAPI.php the parameters include:
						  
						<ul>
							<li> $method = 'GET' </li>
							<li> $url = 'harvestdata.herokuapp.com/farmers/'</li>
							<li> $data = array('search'=>$first_name, 'ordering'=>'last_name') </li>
						</ul>
						NB. For the $data variable, you can use any variable name such as first_name, last_name, alias, 
						res_parish, agri_activity <br />
						Farmers endpoint consists of field names such as {
						"url", 
            		"farmer_id", 
            		"farmer_idx", 
            		"first_name", 
            		"last_name", 
            		"alias", 
            		"res_address", 
            		"res_parish", 
            		"tel_number", 
            		"cell_number", 
            		"verified_status", 
            		"dob", 
            		"agri_activity", 
            		"owner"						
						}. Also, the ordering is done by the last name in ascending order.			
					</li> <br />
					
					<li>
						In line 22, json_decode is used to decode a JSON string and then it becomes a PHP variable 
						<b id="term1">$farmer_objects. </b>				  	
				  	</li>
				  	
					<li>
						In line 24, <b id="term1"> $num_farmers </b> keeps a count of the number of farmers.				  	
				  	</li>
				  		
				  	<li>
						In line 28, <b id="term1"> $fama_dem </b> gets the farmers from results.				  	
				  	</li>
				  		
				  	<li>
						In lines 32-36, a form was created and a navigation was done by First Name. Of course the name must match 
						'first_name', which is the value we are trying to get to print the rest of details of our choice. 
						<br/>
						Tables are created so that the results can be seen there and we have a foreach() loop to 
						print the fields of our choice.<br />
						Look at the table below: <br/>
						<img src="../img/screenshot_farmers.png" alt=""/>		<br /> <br />
						As shown above the foreach() loop in line 51 takes care of each row that has details regarding the 
						first name (take a look at the URL locator and you will see 'first_name'='Clover')
					</li>
				</ul>			  	
			</div>	  		
			<footer>
			
			<table> 
				<tr> 
					<td> <a href="util_php.html"> Previous </a></td> 
    				<td> <a href="../index.html"> Back to Main </a> </td>
    			</tr>
    		</table>
    		
			</footer><!-- /footer -->
			
		</div>	
	</body>
</html>