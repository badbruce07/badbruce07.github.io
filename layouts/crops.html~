<!DOCTYPE html>
<html lang="en" class="no-js">

	<head>
	
		<!-- title and meta -->
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width,initial-scale=1.0" />
		<meta name="description" content="A neat and simple tabbed content area with CSS and jQuery" />
		<title> Going Through With Crops </title>
		
		<link rel="stylesheet" href="../css/new_harvest.css" type="text/css" />
	</head>

	<body>
		<div id="wrapper">
			
			<header>	
				<div id="title" class="container">
        			<h1> Navigating Through Crops Using HarvestAPI  </h1>
    			</div>
			</header>
			
			<div id="main">
				<h1 id="intro"> Going Through Crops Endpoint </h1>
				
				<h3> You can check out the crops endpoint at: <br />
						<a href="http://harvestdata.herokuapp.com/crops/"> HarvestAPI Crops </a>
				</h3> <br /> <br />
				
				<h1 id="intro"> Accessing The Crop Data Through a PHP Snippet </h1>
				<h3> Now you can access the data with any platform of your choice, but for me I will be using PHP especially since
					  from the previous page I created a connection to HarvestAPI utilizing both PHP and cURL called CallHarvestAPI.php. 
					  You can see a view of the snippet below: 
				</h3>
				
				<textarea readonly="readonly" rows="40" cols="100">
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<link rel="stylesheet" href="style.css"/>	
	</head>
	<body>
	
	<?php
		include("CallHarvestAPI.php");

		/*---------------------------------------------------------------------------------------*/
		/*---------------------------------- Crop Details ---------------------------------------*/
		/*---------------------------------------------------------------------------------------*/
		
		$cropname = $_GET['crop_name'];

		// call crops resource to return string
		$crops = CallAPI('GET', 'harvestdata.herokuapp.com/crops/',
					array('search'=>$cropname, 'ordering'=>'-plant_date'));

		//convert JSON string to PHP variable (object)
		$crop_objects = json_decode($crops);
			
		$num_crops = $crop_objects -> count;
		$next_page_crop_url  = $crop_objects -> next;
			
		// getting the actual crops from results
		$crops_dem = $crop_objects -> results;
		
	?>
	
		<form action="crops.php" method="get">
			<fieldset>
				<legend> Search By Crop Name </legend>
				Crop Name <input type="text" name = "crop_name"/> <input type="submit"/>			
			</fieldset>
		</form>		
		<br />
		<br />
		<table>
			<tr>
				<td> Crop Name </td>
				<td> Estimated Volume </td>	
				<td> Area </td>
				<td> Plant Date </td>
				<td> Expiry Date </td>
			</tr>
			
			<?php 
			
			foreach($crops_dem as $crop)
			{
				echo '<tr>
					<td>'.$crop -> crop_name.'</td>
					<td>'.$crop -> estimated_vol. '</td>
					<td>'.$crop -> area. '</td>
					<td>'.$crop -> plant_date. '</td>
					<td>'.$crop -> exp_date. '</td>
				</tr>';			
			}				
			
			?>
		</table>	
	</body>
</html>	
				</textarea>
			
				<h3>
					From the above snippet called <b id="term1"> Crops.php </b>, in line 9, we used an include function which calls 
					back the <b id="term1"> CallHarvestAPI.php </b> snippet. On line 15 we created a variable name 
					called <b id="term1"> $cropname </b> which defines <b id="term1">$_GET['crop_name']</b>. The variable 
					'crop_name' is in fact a field in crops endpoint and is seen again in line 35 in our form. The aim is to 
					search for a crop name to display a list with the fields in the table.	
				
				</h3>

				<ul id="test1">
					<li> In lines 18-19 a variable called $crops and it is equivalent to CallAPI function that has 3 parameters. 
						  If you recall the CallAPI function that was in CallHarvestAPI.php the parameters include:
						  
						<ul>
							<li> $method = 'GET' </li>
							<li> $url = 'harvestdata.herokuapp.com/crops/'</li>
							<li> $data = array('search'=>$cropname, 'ordering'=>'-plant_date') </li>
						</ul>
						
						NB. For the $data variable, you can use any variable name such as common_name, farm, farm_id, parish.	
						Crops Endpoint consists of field names such as {
            "crop_name", 
            "common_name", 
            "estimated_vol", 
            "variety, 
            "plant_date", 
            "count", 
            "area", 
            "status", 
            "exp_date", 
            "farm" }. Also, the ordering is done by plant_date in descending order since there is a (-) before the term 'plant_date'.				  
				  	</li> <br />
				  	<li>
						In line 22, json_decode is used to decode a JSON string and then it becomes a PHP variable 
						<b id="term1">$crop_objects. </b>
				  	
				  	</li>				
				  	<li>
						In line 24, $num_crops keeps a count of the number of crops.				  	
				  	</li>
				  	
				  	<li>
						In line 28, $crops_dem gets the crops from results.				  	
				  	</li>
				  	
				  	<li>
						In lines 32-36, a form was created and a navigation was done by Crop Name. Of course the name must match 
						'crop_name', which is the value we are trying to get to print the rest of details of our choice. 
						<br/>
						Tables are created so that the results can be seen there and we have a foreach() loop to print the fields of our choice.<br />
						Look at the table below: <br/>
						<img src="../img/screenshot_crops.png" alt=""/>		<br /> <br />
						
						As shown above the foreach() loop in line 51 takes care of each row that has details regarding the crop name 
						(take a look at the URL locator and you will see 'crop_name=Potato')		  	
				  	</li>
				</ul>
				
			</div>
			
			<footer>
			
			<table> 
				<tr> 
					<td> <a href="util_php.html"> Previous </a></td> 
    				<td> <a href="../index.html"> Back to Main </a> </td>
    			</tr>
    		</table>
    		
		</footer><!-- /footer -->
		
		</div>	
	</body>
</html>